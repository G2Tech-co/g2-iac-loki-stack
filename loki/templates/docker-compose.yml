services:
  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    # volumes:
    #    - loki-data:/loki
    # depends_on:
    #   - loki
    labels:
      - "traefik.enable=false"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3100/ready"]
    #   interval: 1m30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yaml:/etc/promtail/config.yml:ro

    labels:
      - "traefik.enable=false"
    networks:
      - loki

  grafana:
    image: grafana/grafana:10.2.0
    # ports:
    #   - "3000:3000"
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SERVER_ROOT_URL=
      - GF_SERVER_DOMAIN=loki.g2-holding.co
      - GF_SECURITY_ADMIN_USER=example
      - GF_SECURITY_ADMIN_PASSWORD=example
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    # entrypoint:
    #   - sh
    #   - -euc
    #   - |
    #     mkdir -p /etc/grafana/provisioning/datasources
    #     cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
    #     apiVersion: 1
    #     datasources:
    #     - name: Loki
    #       type: loki
    #       access: proxy 
    #       orgId: 1
    #       url: http://loki:3100
    #       basicAuth: false
    #       isDefault: true
    #       version: 1
    #       editable: false
    #     EOF
    #     /run.sh
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.grafana.entrypoints=http,https"
      - "traefik.http.routers.grafana.rule=Host(`sample`)"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    networks:
      - loki
      - web
  
  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: renderer
    restart: unless-stopped
    ports:
      - 8081
    labels:
      - "traefik.enable=false"
    networks:
      - loki

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 127.0.0.1:9090:9090
    expose:
      - 9090
networks:
  loki:
  web:
    external: true

volumes:
  grafana-data:
  prometheus_data: {}
